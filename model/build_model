# This code is for training a CNN model to classify corn diseases using images.
#Uncomment the code below to run the training process.
# Make sure to replace the <Images file path> with the actual path to your images directory


import cv2
# import os
# import random
# import numpy as np
# import tensorflow as tf
# from tensorflow.keras.models import Sequential
# from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense

# Directory = r"<Images file path>"
# Category = ['Blight','Common_Rust','Gray_Leaf_Spot','Healthy']

# data = []
# for category in Category:
#     folder = os.path.join(Directory, category)
#     label = Category.index(category)
#     for img in os.listdir(folder):
#         img_path = os.path.join(folder, img)
#         img_arr = cv2.imread(img_path)
#         if img_arr is None:  # safety check
#             continue
#         img_arr = cv2.resize(img_arr, (128,128))
#         data.append([img_arr, label])

# # Shuffle before splitting
# random.shuffle(data)

# X, y = zip(*data)
# X = np.array(X, dtype=np.float32) / 255.0
# y = np.array(y, dtype=np.int64)

# model = Sequential()
# model.add(Conv2D(64,(3,3),activation="relu", input_shape=(128,128,3)))
# model.add(MaxPooling2D((2,2)))
# model.add(Conv2D(64,(3,3),activation="relu"))
# model.add(MaxPooling2D((2,2)))
# model.add(Flatten())
# model.add(Dense(128, activation="relu"))
# model.add(Dense(4, activation="softmax"))

# model.compile(optimizer="adamax", loss="sparse_categorical_crossentropy", metrics=['accuracy'])
# model.fit(X, y, epochs=10, validation_split=0.1, shuffle=True)

# model.save("corn_disease.keras")

