#importing the necessary libraries
import cv2
import os
import  pandas as pd
import random
import numpy as np
import tensorflow as tf
from tensorflow import keras
from keras.models import Sequential
from keras.layers import Conv2D,MaxPooling2D,Flatten,Dense

Directory=r"D:\dragon\data"
Category=['Blight','Common_Rust','Gray_Leaf_Spot','Healthy']

data=[]
for category in Category:
    folder=os.path.join(Directory,category)
    label=Category.index(category)
    for img in os.listdir(folder):
        img_path=os.path.join(folder,img)
        img_arr=cv2.imread(img_path)
        img_arr=cv2.resize(img_arr,(128,128))
        data.append([img_arr,label])

#seperating the data into features and labels
X=[]
y=[]

for features,labels in data:
    X.append(features)
    y.append(labels)

#shuffling the data to improve the model's performance
random.shuffle(data)

X=np.array(X)
y=np.array(y)
X=X/255
X.shape

model=Sequential()
model.add(Conv2D(64,(3,3),activation="relu"))
model.add(MaxPooling2D((2,2)))

model.add(Conv2D(64,(3,3),activation="relu"))
model.add(MaxPooling2D((2,2)))
model.add(Flatten())

model.add(Dense(128,input_shape=X.shape[1:],activation="relu"))
model.add(Dense(4,activation="softmax"))

#adding the optimizer and the loss function
model.compile(optimizer="adamax",loss="sparse_categorical_crossentropy",metrics=['accuracy'])

#training the model
model.fit(X,y,epochs=10,validation_split=0.1)
#saving the model
model.save("corn_disease.keras")

#Accuracy : 96%
